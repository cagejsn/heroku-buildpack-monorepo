#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
STAGE="$(mktemp -d)"

if [ ! -f "${ENV_DIR}/APP_BASE" ]; then
    echo "APP_BASE was not set. Aborting" | indent
    exit 1
fi
APP_BASE="$(cat "${ENV_DIR}/APP_BASE")"


if [ -f "${ENV_DIR}/SYMLINK_DIRECTORIES" ]; then
    SYMLINK_DIRECTORIES="$(cat "${ENV_DIR}/SYMLINK_DIRECTORIES")"
fi

if [ -n "$SYMLINK_DIRECTORIES" ]; then

    echo "will attempt to move '${APP_BASE}' and '${SYMLINK_DIRECTORIES}' to root of app" | indent

    for SYMLINK_DIRECTORY in $( echo -n "$SYMLINK_DIRECTORIES" | tr ',' ' ' ); do

        echo "moving: $SYMLINK_DIRECTORY" | indent
   
        mv "${BUILD_DIR}/${SYMLINK_DIRECTORY}" "${STAGE}" 
        if [ $? -ne 0 ]; then
        echo "FAILED to copy "$SYMLINK_DIRECTORY" into place" | indent
        exit 1
        fi

    done

    (
        mv "${BUILD_DIR}/${APP_BASE}" "${STAGE}" &&
        rm -rf "${BUILD_DIR}"/* &&
        mv "${STAGE}/$(basename "$APP_BASE")"/* "${BUILD_DIR}"
    )

    if [ $? -ne 0 ]; then
        echo "FAILED to copy ${APP_BASE} into place" | indent
        exit 1
    fi


    for SYMLINK_DIRECTORY in $( echo -n "$SYMLINK_DIRECTORIES" | tr ',' ' ' ); do

        unlink "${BUILD_DIR}/${SYMLINK_DIRECTORY}"
        mkdir -p "${BUILD_DIR}/${SYMLINK_DIRECTORY}"
        mv "$STAGE/$(basename $SYMLINK_DIRECTORY)"/* "${BUILD_DIR}/${SYMLINK_DIRECTORY}"

    done


    echo "Copied ${APP_BASE} and ${SYMLINK_DIRECTORIES} to root of app successfully" | indent

else 

    (
        mv "${BUILD_DIR}/${APP_BASE}" "${STAGE}" &&
        rm -rf "${BUILD_DIR}"/* &&
        mv "${STAGE}/$(basename "$APP_BASE")"/* "${BUILD_DIR}"
    )

    if [ $? -ne 0 ]; then
        echo "FAILED to copy ${APP_BASE} into place" | indent
        exit 1
    fi

    echo "Copied ${APP_BASE} to root of app successfully" | indent

fi


